from aiogram import Bot, types
from abc import ABC, abstractmethod

class GroupNotifier(ABC):

    @abstractmethod
    async def send_message_to_group(self, chat_id: int, location: dict, user: types.User) -> None:
        pass


class GroupMessageSender(GroupNotifier):

    def __init__(self, bot: Bot):
        self.bot = bot

    async def send_message_to_group(self, chat_id: int, location: dict, user: types.User) -> None:
        try:
            latitude = location['latitude']
            longitude = location['longitude']

            await self.bot.send_message(
                chat_id=chat_id,
                text=f"–ü—Ä–∏–≤–µ—Çüëã! –Ø –≤–∞—à —Ç–∞–∫—Å–∏—Å—Ç @{user.username}, –≥–æ—Ç–æ–≤ –ø–æ–º–æ—á—å –≤–∞–º —Å –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ–π –ø–æ–µ–∑–¥–∫–æ–π üöïüåü.\n\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ —Å–≤–æ—é –ì–µ–æ–ª–æ–∫–∞—Ü–∏—é –∏–∑ –º–µ–Ω—é üìé, –∏ —è –ø—Ä–∏–µ–¥—É –∫ –≤–∞–º! –° –Ω–µ—Ç–µ—Ä–ø–µ–Ω–∏–µ–º –∂–¥—É –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –≤–∞–º –ø–æ–º–æ—á—å —Å –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ–º –ø–æ –≥–æ—Ä–æ–¥—É.\n–°–ø–∞—Å–∏–±–æ –∑–∞ –≤—ã–±–æ—Ä –Ω–∞—à–µ–≥–æ —Ç–∞–∫—Å–∏-—Å–µ—Ä–≤–∏—Å–∞, –∏ –¥–æ —Å–∫–æ—Ä–æ–π –≤—Å—Ç—Ä–µ—á–∏!üòä",
            )

            # Send the location map to the group
            await self.bot.send_location(chat_id=chat_id, latitude=latitude, longitude=longitude)

            await self.bot.send_message(
                chat_id=user.id,
                text=f"–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –≤–∞—Å –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ.\n\n–ú—ã —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –µ–≥–æ –≤ –≥—Ä—É–ø–ø—É {chat_id}. –ï—Å–ª–∏ –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å —Å–≤–æ—é üìç–≥–µ–æ–º–µ—Ç–∫—É –≤ —ç—Ç–æ–π –≥—Ä—É–ø–ø–µ, –ø—Ä–æ—Å—Ç–æ –ø–æ–≤—Ç–æ—Ä–Ω–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ—é –ì–µ–æ–ª–æ–∫–∞—Ü–∏—é."
            )
        except Exception as e:
            # Log the error or handle it appropriately
            print(f"Error sending message to group: {e}")
